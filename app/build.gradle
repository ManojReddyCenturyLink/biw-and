apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'org.jetbrains.dokka'

apply plugin: 'kotlin-kapt'

android {

    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    defaultConfig {
        applicationId "com.centurylink.biwf"
        minSdkVersion 26
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    viewBinding {
        enabled = true
    }

    dataBinding {
        enabled = true
        enabledForTests = true
    }

    androidExtensions {
        experimental = true
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    //Android Core libraries and
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.appcompat:appcompat:$androidxAppCompatVersion"
    implementation "androidx.core:core-ktx:$androidxCoreVersion"
    implementation "androidx.constraintlayout:constraintlayout:$androidxConstraintLayoutVersion"
    implementation "androidx.multidex:multidex:$androidxMultidexVersion"
    implementation "androidx.viewpager2:viewpager2:${viewpager2Version}"

    implementation "com.google.android.material:material:${materialComponentsVersion}"
    implementation "androidx.appcompat:appcompat:${androidxAppCompatVersion}"
    implementation "androidx.recyclerview:recyclerview:${recyclerview}"

    // Cardview Dependency
    implementation "androidx.cardview:cardview:$cardviewVersion"

    /* Dagger2 - default dependency */
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    /* Dagger2 - We are going to use dagger.android which includes
   * support for Activity and fragment injection so we need to include
   * the following dependencies */
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
    kaptTest "com.google.dagger:dagger-compiler:$daggerVersion"

    //Gson
    implementation "com.google.code.gson:gson:$gsonVersion"

    //RX java
    implementation "io.reactivex.rxjava3:rxandroid:$rxJavaVersion"
    implementation "io.reactivex.rxjava3:rxjava:$rxJavaVersion"

    //LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$androidxLifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-extensions:$androidxLifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$androidxLifecycleVersion"

    // Parceler in Kotlin
    implementation "org.parceler:parceler-api:$parcelerVersion"
    kapt "org.parceler:parceler:$parcelerVersion"

    //retrofit
    implementation "com.squareup.retrofit2:retrofit:$retroFit2Version"
    implementation "com.squareup.retrofit2:converter-gson:$retroFit2Version"
    implementation "com.squareup.okhttp3:logging-interceptor:$logginginterceptor"

    //timber
    implementation "com.jakewharton.timber:timber:$timberVersion"
    implementation "com.github.ome450901:SimpleRatingBar:$ratingVersion"

    //TEST IMPLEMENTATION
    testImplementation "junit:junit:$jUnitVersion"
    testImplementation "io.mockk:mockk:$mockKVersion"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoVersion"
    testImplementation "androidx.arch.core:core-testing:$archCoreTestingVersion"
    testImplementation "org.amshove.kluent:kluent-android:$kluentVersion"
    androidTestImplementation "androidx.test.ext:junit:$testRunnerVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoCoreVersion"
}

dokka {
    outputFormat = 'html'
    outputDirectory = "$buildDir/dokka"
}
