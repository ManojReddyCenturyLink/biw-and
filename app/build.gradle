apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'org.jetbrains.dokka'

apply plugin: 'kotlin-kapt'

android {
    viewBinding {
        enabled = true
    }
    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    defaultConfig {
        applicationId "com.centurylink.biwf"
        minSdkVersion 26
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    //Android Core libraries and
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.core:core-ktx:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.0.0'
    implementation 'androidx.multidex:multidex:2.0.1'

    // Cardview Dependency
    def cardviewVersion = '1.0.0'
    implementation "androidx.cardview:cardview:$cardviewVersion"

    /* Dagger2 - default dependency */
    def daggerVersion = '2.27'
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    /* Dagger2 - We are going to use dagger.android which includes
   * support for Activity and fragment injection so we need to include
   * the following dependencies */
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"

    //Gson
    def gsonVersion = '2.8.6'
    implementation "com.google.code.gson:gson:$gsonVersion"

    //RX java
    def rxJavaVersion = '3.0.0'
    implementation "io.reactivex.rxjava3:rxandroid:$rxJavaVersion"
    implementation "io.reactivex.rxjava3:rxjava:$rxJavaVersion"

    //LiveData
    def lifecycleVersion = "2.2.0"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"

    // Parceler in Kotlin
    def parclerVersion = '1.1.12'
    implementation "org.parceler:parceler-api:$parclerVersion"
    kapt "org.parceler:parceler:$parclerVersion"

    //retrofit
    def retrofitVersion = '2.7.2'
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"

    //timber
    def timberVersion = '4.7.1'
    implementation "com.jakewharton.timber:timber:$timberVersion"

    //TEST IMPLEMENTATION
    testImplementation 'junit:junit:4.12'
    testImplementation'io.mockk:mockk:1.9.3'
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0"
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
}

dokka {
    outputFormat = 'html'
    outputDirectory = "$buildDir/dokka"
}
